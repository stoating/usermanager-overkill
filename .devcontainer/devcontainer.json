// for format details, see https://aka.ms/devcontainer.json. for config options, see the README at:
{
  "name": "CLJ/S",

  "build": {
    // Update the 'dockerFile' property if you aren't using the standard 'Dockerfile' filename.
    "dockerfile": "Dockerfile",
    "args": {
      "APP_PLATFORM":"linux-x64"
    }
  },

  "features": {
    "ghcr.io/devcontainers/features/docker-in-docker:2": {},
    "ghcr.io/devcontainers/features/github-cli:1": {}
  },

  // set *default* container specific settings.json values on container create.
  "customizations": {
    "vscode": {
      "settings": {
        "calva.autoEvaluateCode": {
          "onConnect": {
            "clj": "(when-let [requires (resolve 'clojure.main/repl-requires)] (clojure.core/apply clojure.core/require @requires))",
            "cljs": "(try (require '[cljs.repl :refer [apropos dir doc find-doc print-doc pst source]]) (catch :default e (js/console.warn \"Failed to require cljs.repl utilities:\" (.-message e))))"
          },
          "onFileLoaded": {
            "clj": null,
            "cljs": null
          }
        },
        "calva.paredit.defaultKeyMap": "strict",
        "calva.prettyPrintingOptions": {
          "printEngine": "pprint",
          "enabled": false,
          "width": 120,
          "maxLength": 50
        },
        "clojure.trace.server": "verbose",
        "editor.defaultFormatter": "betterthantomorrow.calva",
        "editor.fontLigatures": true,
        "editor.indentSize": "tabSize",
        "editor.inlineSuggest.enabled": true,
        "editor.rulers": [
          80,
          120
        ],
        "editor.renderWhitespace": "all",
        "editor.stickyScroll.enabled": true,
        "editor.wordWrap": "on",
        "files.trimTrailingWhitespace": true,
        "github.gitProtocol": "ssh",
        "glassit.alpha": 215,
        "prettifySymbolsMode.substitutions":[
          {
            "language": "clojure",
            "substitutions": [
              { "ugly": "fn", "pretty": " λ", "pre": "\\b", "post": "\\b"},
              { "ugly": "#",  "pretty": "λ", "post": "[((]"},
              { "ugly": "#",  "pretty": "∈", "post": "[{]"}
            ]
          }
        ],
        "workbench.colorTheme": "Night Wolf (black) (No Italics)",
        "workbench.colorCustomizations": {
          "editorWhitespace.foreground": "#45504d"
        }
      },
      "extensions": [
        "betterthantomorrow.calva",
        "bradlc.vscode-tailwindcss",
        "davidanson.vscode-markdownlint",
        "djblue.portal",
        "eamodio.gitlens",
        "esbenp.prettier-vscode",
        "github.copilot",
        "github.copilot-chat",
        "irongeek.vscode-env",
        "joshuapoehls.json-escaper",
        "maosantaella.night-wolf",
        "medo64.render-crlf",
        "moshfeu.compare-folders",
        "ms-azuretools.vscode-docker",
        "rapidapi.vscode-rapidapi-client",
        "redhat.vscode-yaml",
        "s-nlf-fh.glassit",
        "shardulm94.trailing-spaces",
        "siegebell.prettify-symbols-mode",
        "zainchen.json"
      ]
    }
  },

  // use 'forwardPorts' to make a list of ports inside the container available locally.
  // 8080: web server
  // 6543: xtdb database
  "forwardPorts": [
    8080,
    6543
  ],

  // open vscode in the container and run the startup-dev script
  "postCreateCommand": "bb startup-dev",

  "containerEnv": {
    "APP_APP_HOST_PORT": "8080",
    "APP_APP_CONT_PORT": "3001",
    "APP_XTDB_HOST_NAME": "localhost",
    "APP_XTDB_HOST_PORT": "6543",
    "APP_XTDB_CONT_PORT": "3000",
    "APP_GITHUB_USER_NAME": "stoating",
    "APP_GITHUB_USER_EMAIL": "stoating.around@gmail.com"
  }

  // uncomment to connect as a non-root user. See https://aka.ms/vscode-remote/containers/non-root.
  //"remoteUser": "vscode"
}
